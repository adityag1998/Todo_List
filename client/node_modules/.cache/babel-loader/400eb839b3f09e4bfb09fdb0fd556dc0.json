{"ast":null,"code":"var _jsxFileName = \"/Users/adi.explorer/WebDev/Todo_List/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000',\n  cache: new InMemoryCache()\n});\nconst GET_TODOS = gql`\n  query {\n    todos {\n      id\n      text\n      complete\n    }\n  }\n`;\n\nfunction getTodos() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TODOS);\n  if (loading) console.log('Loading ...');\n  if (error) console.error(error);\n  if (data) console.log(data);\n}\n\n_s(getTodos, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This is client side\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getTodos,\n        children: \"getTodos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adi.explorer/WebDev/Todo_List/client/src/App.js"],"names":["useQuery","gql","ApolloProvider","ApolloClient","InMemoryCache","client","uri","cache","GET_TODOS","getTodos","loading","error","data","console","log","App"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;;;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE,uBADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIH,aAAJ;AAFuB,CAAjB,CAAf;AAKA,MAAMI,SAAS,GAAGP,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASQ,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CAACQ,SAAD,CAAzC;AACA,MAAIE,OAAJ,EAAaG,OAAO,CAACC,GAAR,CAAY,aAAZ;AACb,MAAIH,KAAJ,EAAWE,OAAO,CAACF,KAAR,CAAcA,KAAd;AACX,MAAIC,IAAJ,EAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACX;;GALQH,Q;UAC0BT,Q;;;AAMnC,SAASe,GAAT,GAAe;AACb,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEV,MAAxB;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEI,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQM,G;AAWT,eAAeA,GAAf","sourcesContent":["import { useQuery, gql } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000',\n  cache: new InMemoryCache(),\n});\n\nconst GET_TODOS = gql`\n  query {\n    todos {\n      id\n      text\n      complete\n    }\n  }\n`;\n\nfunction getTodos() {\n  const { loading, error, data } = useQuery(GET_TODOS);\n  if (loading) console.log('Loading ...');\n  if (error) console.error(error);\n  if (data) console.log(data);\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <>\n        <h1>This is client side</h1>\n        <button onClick={getTodos}>getTodos</button>\n      </>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}